#!/bin/bash -e
# UTF-8 encoded
#<---- Fonction ---->


function Network {  #On cr√©e la Fonction Network qui aura pour but de rassembler toute la configuration R√©seaux
    Network_choices=True  # On cr√©e une variable qui a pour valeur vraie
    while [ Network_choices ]  # On cr√©e une Boucle qui va permettre de recommence le scripte si voulu ou en cas d erreur
    do
        read -p "Voulez-vous configurer votre interface r√©seaux ? (yes/no) :" rep  #On demande √† l utilisateur si il veut configurer l interface r√©seaux si oui on regarde la ligne en dessous si non on sort du script
          if [ $rep = "yes" ] || [ $rep = "y" ] || [ $rep = "YES"] || [ $rep = "Oui"] || [ $rep = "o"] # Condition 1: Suivant la reponse donn√© par l utilisateur,si c'est yes/y/Oui/o il va poursuivre via la ligne en dessous
          then
                if [ -e "/etc/systemd/network/01.network" ] # Condition 2: On verifie que le Fichier 01.network existe si oui on regarde la ligne en dessous
                 then  # Ensuite
                 sleep 1 # On attend 1 seconde 
                 echo 'Le Fichier existe d√©ja üòâ' # On va dire que le Fichier existe d√©j√† par rapport √† la Condition 2
                 sleep 1 # On attend 1 seconde
                 read -p "Quel Nom voulez-vous donner a votre Fichier de Configuration d'Interface ? üôÉ:" fichier  # On demande √† l utilisateur de donn√©e un nom pour le fichier de Configuration ,la variable $fichier va prendre la valeur donn√©e
                 touch $fichier # On cr√©e le fichier qui aura pour nom la valeur donn√©e dans $fichier
                 read -p "Nom Interface (eth?,enp?s?) :" NIF  # On demande √† l utilisateur de donn√©e un nom pour l interface et la variable $NIF prendra la valeur donn√©e
                 read -p "L'IP (XXX.XXX.XXX.XXX/YY) : " IP  # On demande √† l utilisateur de donn√©e un nom pour l interface et la variable $IP prendra la valeur donn√©e
                 read -p "Gateway (Passerelle) :" GT  # On demande √† l utilisateur de donn√©e un nom pour l interface et la variable $GT prendra la valeur donn√©e  
                 read -p "DNS :" DNS  # On demande √† l utilisateur de donn√©e un nom pour l interface et la variable $DNS prendra la valeur donn√©e  
                 echo -e "[Match]\nName=$NIF\n[Network]\nAddress=$IP\nGateway=$GT\nDNS=$DNS" >> /etc/systemd/network/$fichier   # On Retourne dans Fichier un texte pr√©definie qui inclue les variable qu on d√©clar√© avant dans un chemin pr√©cis√©
                 echo "" # Retourne un vide
                else # Sinon si il n existe pas le Fichier on regarde la ligne en dessous
                 sleep 1 # On attend 1 seconde
                 echo "Le Fichier n'existe pas üò£" # On va dire que le Fichier n existe pas par rapport √† la Condition 2
                 touch /etc/systemd/network/01.network # On va cr√©er le fichier 01.network par default dans un chemin pr√©cis
                 sleep 1 # On attend 1 seconde
                 read -p "Nom Interface (eth?,enp?s?) :" NIF  # On demande √† l utilisateur de donn√©e un nom pour l interface et la variable $NIF prendra la valeur donn√©e
                 read -p "L'IP (XXX.XXX.XXX.XXX/YY) : " IP  # On demande √† l utilisateur de donn√©e un nom pour l interface et la variable $IP prendra la valeur donn√©e
                 read -p "Gateway (Passerelle) :" GT  # On demande √† l utilisateur de donn√©e un nom pour l interface et la variable $GT prendra la valeur donn√©e  
                 read -p "DNS :" DNS  # On demande √† l utilisateur de donn√©e un nom pour l interface et la variable $DNS prendra la valeur donn√©e  
                 echo -e "[Match]\nName=$NIF\n[Network]\nAddress=$IP\nGateway=$GT\nDNS=$DNS" >> /etc/systemd/network/$fichier   # On Retourne dans Fichier un texte pr√©definie qui inclue les variable qu on d√©clar√© avant dans un chemin pr√©cis√©
                 echo "" # Retourne un vide
                fi  # Pour Finir
                 echo "Application sur l'interface ‚è≥"  # On dit qu on applique sur l interface les modifications/cr√©ations qu on effectuer juste avant
                 sleep 1 # On attend 1 seconde
                 systemctl restart systemd-networkd  # On redemarre le service systemd-networkd
                 sleep 2 # On attend 2 seconds
                 echo "C'est bon l'interface est enfin configur√©e ‚úÖ"  # On dit que l interface est enfin configur√©e
                 sleep 2 # On attend 2 seconds
                 echo "Voici votre configuration d'interface via $NIF"  # On dit LA configuration de l interface via la variable $NIF
                 ip addr show $NIF # On montre l'interface via la commande ainsi que l argument $NIF
            else # Sinon si il a reponse est non ou no ou autre que les r√©ponses demander alors voir la ligne en dessous
             echo "Vous quittez le Menu de Configuration d'interface üëã" #On dit qu on va quitter le menu de configuration d interface
             sleep 1 # On attend 1 seconde
             echo -e "\nGoodbyeüëãüëã" #On dit au revoir
             sleep 2 # On attend 2 seconds
             exit #Quitte le script
            fi #Pour Finir
            read -p  "Maintenant que vous avez termin√© votre configuration,est-ce que vous voulez configurer une nouvelle interface ? (yes/no)ü§†:" rep4  #On demande √† l utilisateur si il veut configurer une nouvelle interface ? suivant √ßa reponse la variable $rep4 prendra la valeur donn√©e
            if [ $rep4 = "no" ] || [ $rep4 = "n" ] || [ $rep4 = "Non"] || [ $rep4 = "NO"] || [ $rep4 = "NON"] || [ $rep4 = "N"] # Condition 3 :Si la valeur de $rep4 est No/N/n/Non/NON/NO alors voir la ligne en dessosu
            then # Ensuite
              sleep 2 # On attend 2 seconds
              echo "Vous quittez le Menu de Configuration d'interface üëã" #On dit qu on va quitter le menu de configuration d interface
              sleep 1 # On attend 1 seconde
              exit #On quitter le Script
            fi #Pour finir ,si la valeur de $rep4 de la condition 3 √©tant yes/y ou autre que non alors on retourne au d√©but du script
  done # Terminer
}

function Main { #On cr√©e la fonction Main qui va servir √† faire appelle au autres fonction
    clear # On supprime tous les messages d'avant
    # Petit Logo en ASCII
    echo -e "‚ñà‚ñà‚ñà‚ñÑ    ‚ñà ‚ñì‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñÑ‚ñÑ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì ‚ñà     ‚ñà‚ñë ‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñÄ‚ñà‚ñà‚ñà   ‚ñà‚ñà ‚ñÑ‚ñà‚ñÄ\n ‚ñà‚ñà ‚ñÄ‚ñà   ‚ñà ‚ñì‚ñà   ‚ñÄ ‚ñì  ‚ñà‚ñà‚ñí ‚ñì‚ñí‚ñì‚ñà‚ñë ‚ñà ‚ñë‚ñà‚ñë‚ñí‚ñà‚ñà‚ñí  ‚ñà‚ñà‚ñí‚ñì‚ñà‚ñà ‚ñí ‚ñà‚ñà‚ñí ‚ñà‚ñà‚ñÑ‚ñà\n ‚ñì‚ñà‚ñà  ‚ñÄ‚ñà ‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà‚ñà   ‚ñí ‚ñì‚ñà‚ñà‚ñë ‚ñí‚ñë‚ñí‚ñà‚ñë ‚ñà ‚ñë‚ñà ‚ñí‚ñà‚ñà‚ñë  ‚ñà‚ñà‚ñí‚ñì‚ñà‚ñà ‚ñë‚ñÑ‚ñà ‚ñí‚ñì‚ñà‚ñà‚ñà‚ñÑ‚ñë \n ‚ñì‚ñà‚ñà‚ñí  ‚ñê‚ñå‚ñà‚ñà‚ñí‚ñí‚ñì‚ñà  ‚ñÑ ‚ñë ‚ñì‚ñà‚ñà‚ñì ‚ñë ‚ñë‚ñà‚ñë ‚ñà ‚ñë‚ñà ‚ñí‚ñà‚ñà   ‚ñà‚ñà‚ñë‚ñí‚ñà‚ñà‚ñÄ‚ñÄ‚ñà‚ñÑ  ‚ñì‚ñà‚ñà ‚ñà‚ñÑ \n‚ñí‚ñà‚ñà‚ñë   ‚ñì‚ñà‚ñà‚ñë‚ñë‚ñí‚ñà‚ñà‚ñà‚ñà‚ñí  ‚ñí‚ñà‚ñà‚ñí ‚ñë ‚ñë‚ñë‚ñà‚ñà‚ñí‚ñà‚ñà‚ñì ‚ñë ‚ñà‚ñà‚ñà‚ñà‚ñì‚ñí‚ñë‚ñë‚ñà‚ñà‚ñì ‚ñí‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà‚ñí ‚ñà‚ñÑ\n‚ñë ‚ñí‚ñë   ‚ñí ‚ñí ‚ñë‚ñë ‚ñí‚ñë ‚ñë  ‚ñí ‚ñë‚ñë   ‚ñë ‚ñì‚ñë‚ñí ‚ñí  ‚ñë ‚ñí‚ñë‚ñí‚ñë‚ñí‚ñë ‚ñë ‚ñí‚ñì ‚ñë‚ñí‚ñì‚ñë‚ñí ‚ñí‚ñí ‚ñì‚ñí\n‚ñë ‚ñë‚ñë   ‚ñë ‚ñí‚ñë ‚ñë ‚ñë  ‚ñë    ‚ñë      ‚ñí ‚ñë ‚ñë    ‚ñë ‚ñí ‚ñí‚ñë   ‚ñë‚ñí ‚ñë ‚ñí‚ñë‚ñë ‚ñë‚ñí ‚ñí‚ñë\nBy Foufou-exe | BASH | https://github.com/Foufou-exe"
    echo -e "\nLancement du Script de configuration d'interface üòÑ" #On dit qu on est entrain de lance le script de configuration d'interface'
    echo " " # On retourne un vide
    Network   #On fait appelle √† la fonction Network
}

#<------- Lancement du Script de configuration d'interface ------->
Main #On appelle la fonction Main pour pouvoir lancer le script et ainsi pouvoir lancer les autres fonctions